---
- name: Start Ansible PlayBook Script
  hosts: localhost
  become: yes
  become_user: root
  become_method: sudo
  vars_files:
  - env_vars

  tasks:

  - name: Install logging monitor, google-fluentd
    get_url:
      url: https://storage.googleapis.com/signals-agents/logging/google-fluentd-install.sh
      dest: /tmp/
      mode: 0755

  - name: Execute google-fluentd
    shell: /tmp/google-fluentd-install.sh

  - name: Restart service google-fluentd
    service:
      name: google-fluentd
      state: restarted

  - name: install pip and upgrade
    pip:
      name: pip
      executable: pip3
      state: latest

  - name: Install packages
    apt: update_cache=yes name={{ item }} state=present
    with_items:
      - build-essential
      - supervisor
      - python3-dev
      - python3-pip
      - libffi-dev
      - libssl-dev
      - mysql-client

  - name: Install pip packages
    pip: name={{ item }} state=present
    with_items:
     - flask
     - flask_sqlalchemy
     - pymysql

  - name: Create group
    group:
      name: pythonapp

  - name: Create pythonapp user for application
    user:
      name: pythonapp
      home: /home/pythonapp
      shell: /bin/bash
      group: pythonapp

  - name: update pip and install virtualenv
    shell: pip3 install --upgrade pip virtualenv

  - name: Install requirements
    become: true
    become_method: sudo
    pip:
      requirements: /opt/app/7-gce/requirements.txt
      virtualenv: /opt/app/7-gce/env

  - name: Download cloud sql proxy
    get_url:
      url: https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64
      dest: /opt/app/ansible/
      mode: 0755

  - name: Rename Proxy File
    shell: 'mv /opt/app/ansible/cloud_sql_proxy.linux.amd64 /opt/app/ansible/cloud_sql_proxy'

  - name: Connect to proxy
    shell: 'cd /opt/app/ansible && ./cloud_sql_proxy -instances={{cloudsql_connection_name}}=tcp:3306'
    async:
    poll: 0

  - name: Create tables in database
    command: 'python3 /opt/app/7-gce/bookshelf/model_cloudsql.py'
    ignore_errors: yes

  - name:  user pythonapp dependencies
    file:
      path: /opt/app
      owner: pythonapp
      group: pythonapp
      recurse: yes

  - name: Copy config file to folder
    copy: src={{ source_file }} dest={{ destin_file }} mode=0555

  - name: Restart supervisor
    supervisorctl:
      name: pythonapp
      state: restarted
      config: /etc/supervisor/supervisord.conf